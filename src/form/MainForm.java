/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import java.awt.CardLayout;
import session.Session;
import components.IView;
import components.SettingsPanel;
import components.StartPanel;
import controller.PanelController;
import utils.PanelNames;

/**
 *
 * @author Gazi
 */
public class MainForm extends javax.swing.JFrame implements IView {

    private static Session activeSession;

    /**
     * Creates new form MainForm2
     */
    public MainForm() {
        initComponents();
        setLocationRelativeTo(null);
        populatePanel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        connectionMenu = new javax.swing.JMenu();
        dbConfigurationMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(600, 400));
        setMinimumSize(new java.awt.Dimension(600, 400));

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 377, Short.MAX_VALUE)
        );

        connectionMenu.setText("Connection");

        dbConfigurationMenuItem.setText("Database configuration");
        dbConfigurationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbConfigurationMenuItemActionPerformed(evt);
            }
        });
        connectionMenu.add(dbConfigurationMenuItem);

        menuBar.add(connectionMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dbConfigurationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbConfigurationMenuItemActionPerformed
        CardLayout cardLayout = (CardLayout) container.getLayout();
        cardLayout.show(container, PanelNames.DATABASE_SETTINGS_PANEL);
    }//GEN-LAST:event_dbConfigurationMenuItemActionPerformed

    private void populatePanel() {
        container.removeAll();
        CardLayout cardLayout = new CardLayout();
        container.setLayout(cardLayout);
        container.add(new StartPanel(), PanelNames.START_SERVER_PANEL);
        container.add(new SettingsPanel(), PanelNames.DATABASE_SETTINGS_PANEL);
        PanelController.getInstance().setContainer(container);
        cardLayout.show(container, PanelNames.START_SERVER_PANEL);
    }

    public static Session getActiveSession() {
        return activeSession;
    }

    public static void setActiveSession(Session aActiveSession) {
        activeSession = aActiveSession;
    }

    @Override
    public void updateView() {

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu connectionMenu;
    private javax.swing.JPanel container;
    private javax.swing.JMenuItem dbConfigurationMenuItem;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
